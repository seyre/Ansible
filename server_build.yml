- hosts: lnlxrr01 lnlxwg01
  vars:

  - import_playbook: snmp_config.yml

  tasks:
## REGISTER SERVER TO SPACEWALK
  - name: Ansible copy RHN-Register folder from Spacewalk to Target Server
    copy:
     src: /var/satellite/RHN-Register
     dest: /var/tmp

  - name: Create a directory if it does not exist
    file:
     path: /etc/yum.repos.d/BACKUP
     state: directory
     mode: '0755'

  - name: Shell yum clean all
    shell: /usr/bin/yum clean all
    args:
      executable: /bin/bash
      warn: no
      creates: /etc/yum.repos.d/CentOS-Base.repo

  - name: Shell copy repo files to BACKUP directory
    shell: /usr/bin/mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/BACKUP
    args:
      executable: /bin/bash
      warn: no
      creates: /etc/yum.repos.d/BACKUP/CentOS-Base.repo

#  - name: Remove repository (and clean up left-over metadata)
#    yum_repository:
#      name: base/7/x86_64 extras/7/x86_64 updates/7/x86_64
#      state: absent
#      notify: yum-clean-metadata

#  - name: Remove file (delete file)
#    file:
#     path: /etc/yum.repos.d/*.repo
#     state: absent

  - name: YUM install RHN-Register PART I and pre-requisites from local file
    yum:
      name: /var/tmp/RHN-Register/libnl-1.1.4-3.el7.x86_64.rpm, /var/tmp/RHN-Register/m2crypto-0.21.1-17.el7.x86_64.rpm, /var/tmp/RHN-Register/pyOpenSSL-0.13.1-4.el7.x86_64.rpm, /var/tmp/RHN-Register/python-dmidecode-3.12.2-3.el7.x86_64.rpm, /var/tmp/RHN-Register/python-ethtool-0.8-8.el7.x86_64.rpm, /var/tmp/RHN-Register/python-gudev-147.2-7.el7.x86_64.rpm, /var/tmp/RHN-Register/python-hwdata-1.7.3-4.el7.noarch.rpm, /var/tmp/RHN-Register/yum-rhn-plugin-2.0.1-10.el7.noarch.rpm, /var/tmp/RHN-Register/rhn-check-2.0.2-24.el7.x86_64.rpm, /var/tmp/RHN-Register/rhn-client-tools-2.0.2-24.el7.x86_64.rpm, /var/tmp/RHN-Register/rhnlib-2.5.65-8.el7.noarch.rpm, /var/tmp/RHN-Register/rhnsd-5.0.13-10.el7.x86_64.rpm, /var/tmp/RHN-Register/rhn-setup-2.0.2-24.el7.x86_64.rpm, /var/tmp/RHN-Register/rhn-client-tools-2.0.2-24.el7.x86_64.rpm
      state: present
      disable_gpg_check: yes

  - name: YUM install RHN-Register PART II and pre-requisites from local file
    yum:
      name: /var/tmp/RHN-Register/python2-rhn-check-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/python2-rhnlib-2.9.5-1.el7.noarch.rpm, /var/tmp/RHN-Register/python2-rhn-client-tools-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/python2-rhn-setup-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/rhn-client-tools-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/rhn-setup-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/rhn-check-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/yum-rhn-plugin-2.9.5-1.el7.noarch.rpm
      state: present
      disable_gpg_check: yes


## yum-rhn-plugin - disable GPG check
  - name: yum-rhn-plugin update GPG check 0 in /etc/yum/pluginconf.d/rhnplugin.conf
    lineinfile:
     path: /etc/yum/pluginconf.d/rhnplugin.conf
     insertafter: '#gpgcheck = 0'
     line: 'gpgcheck = 0'
     backup: yes

## RHN-register
  - name: rhn-register as with activation key
    rhn_register:
      state: present
      activationkey: 1-21ad0fddf8f510baf82b58788f384190
      server_url:  http://192.168.130.76/XMLRPC
#      channels: centos-7-base-x86_64

## RHN-register add software channels
#  - name: rhn-register add software base channels
#    rhn_register:
#      state: present
#      activationkey: 1-21ad0fddf8f510baf82b58788f384190
#      channels: 'Centos 7 Base x86_64'


## Spacewalk osad packages install
  - name: YUM install osad Spacewalk packages
    yum:
      name: /var/tmp/RHN-Register/python2-rhnlib-2.9.5-1.el7.noarch.rpm, /var/tmp/RHN-Register/python2-rhn-client-tools-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/rhn-setup-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/python2-rhn-check-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/python2-rhn-setup-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/rhn-client-tools-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/jabberpy-0.5-0.27.el7.noarch.rpm, /var/tmp/RHN-Register/python2-osa-common-5.11.107-1.el7.noarch.rpm, /var/tmp/RHN-Register/rhn-check-2.9.36-1.el7.noarch.rpm, /var/tmp/RHN-Register/spacewalk-usix-2.9.1-1.el7.noarch.rpm, /var/tmp/RHN-Register/python2-spacewalk-usix-2.9.1-1.el7.noarch.rpm, /var/tmp/RHN-Register/python2-osad-5.11.107-1.el7.noarch.rpm, /var/tmp/RHN-Register/osad-5.11.107-1.el7.noarch.rpm
      state: present
      disable_gpg_check: yes

## Add SpaceWalk SSL certificate to host
  - name: Ansible copy SpaceWalk SSL cert to target server
    copy:
     src: /var/www/html/pub/RHN-ORG-TRUSTED-SSL-CERT
     dest: /usr/share/rhn/


## RHN-Register clean up /var/tmp/RHN-Register working directory
#  - name: Clean-up remove /var/tmp/RHN-Register directory
#    file:
#     path: /var/tmp/RHN-Register
#     state: absent


## ADD FIREWALL RULES
# Firewalld - enable sftp/ssh services
  - name:  Firewalld enbable services
    firewalld:
       service: "{{ item }}"
       permanent: yes
       state: enabled
    loop:
      - ssh


## ADD ADMIN USERS AND GROUPS
# Add sp_users group
  - name: Add sp_users group
    group:
     name: sp_users
     state: present

# Add xrdpusers group
  - name: Add xrdpusers group
    group:
     name: xrdpusers
     state: present

# Add sp_users accounts locally
  - name: Add sp_users accounts locally
    user:
     name: "{{ item }}"
     state: present
     shell: /bin/bash
     groups: sp_users,xrdpusers
     append: yes
    loop:
      - stevene
      - paul
      - andrew
      - charlie
      - evansa
      - krpa
      - avpa

# Add sp_users entries to /etc/sudoers
  - name: Adding sp_users to /etc/sudoers
    lineinfile:
      owner: root
      group: root
      dest: /etc/sudoers
      backup: yes
      validate: /usr/sbin/visudo -cf %s
      line: '{{ item }}'
    with_items:
      - ''
      - '## sp_users'
      - 'Cmnd_Alias SP_USERS = /bin/firewall-cmd, /bin/systemctl, /sbin/reboot, /usr/bin/vi /etc/hosts, /bin/vim /etc/hosts, /usr/bin/su -'
      - '%sp_users      ALL=(ALL)        SP_USERS'


## ADD NORMAL USERS AND GROUPS
# Add devs group
  - name: Add devs group
    group:
     name: devs
     state: present

# Add xrdpusers group
  - name: Add xrdpusers group
    group:
     name: xrdpusers
     state: present

# Add ECA user/group
  - name: Add ECA user and Group
    user:
     name: ECA
     state: present

# Add DevMan user/group
  - name: Add DevMan ACL Group
    group:
     name: DevMan
     state: present

# Add DevLead user/group
  - name: Add DevLead ACL Group
    group:
     name: DevLead
     state: present

# Add Developers accounts locally
  - name: Add developers accounts locally
    user:
     name: "{{ item }}"
     state: present
     shell: /bin/bash
     groups: devs,xrdpusers,ECA
     append: yes
    loop:
      - ECABuildRelease
      - giteca
      - NickG
      - AlexP
      - SajedH
      - KulaK
      - WendyG
      - MikeM
      - RemyR
      - GlennK
      - IstvanK
      - SergejS

# Add Users to DevMan group
  - name:  Add users to DevMan Group
    user:
     name: "{{ item }}"
     state: present
     shell: /bin/bash
     groups: devs,xrdpusers,ECA,DevMan
     append: yes
    loop:
      - NickG
      - RuneS

# Add Users to DevLead group
  - name:  Add users to DevLead Group
    user:
     name: "{{ item }}"
     state: present
     shell: /bin/bash
     groups: devs,xrdpusers,ECA,DevLead
     append: yes
    loop:
      - WendyG
      - MikeM

# Setup ACL's for devs group (excludes read/write access to DevMan and DevLead)
  - name:  Add ACL for devs group to /home accounts excluding DevMan and DevLead users
    acl:
      path: "{{ item }}"
      entity: devs
      etype: group
      permissions: rwx
      state: present
    loop:
      - /home/GlennK
      - /home/SergejS
      - /home/AlexP
      - /home/SajedH
      - /home/RemyR
      - /home/IstvanK
      - /home/KulaK

# Setup ACL's for DevLead group(excludes read/write access to DevLead)
  - name:  Add ACL for DevMan group to /home accounts excluding DevLead users
    acl:
      path: "{{ item }}"
      entity: DevLead
      etype: group
      permissions: rwx
      state: present
    loop:
      - /home/GlennK
      - /home/SergejS
      - /home/AlexP
      - /home/SajedH
      - /home/RemyR
      - /home/IstvanK
      - /home/KulaK
      - /home/MikeM
      - /home/WendyG

# Setup ACL's for DevLead group(read/write access to everything)
  - name:  Add ACL for DevLead group to all /home accounts
    acl:
      path: "{{ item }}"
      entity: DevMan
      etype: group
      permissions: rwx
      state: present
    loop:
      - /home/GlennK
      - /home/SergejS
      - /home/AlexP
      - /home/SajedH
      - /home/RemyR
      - /home/IstvanK
      - /home/KulaK
      - /home/MikeM
      - /home/WendyG
      - /home/NickG
      - /home/RuneS

# Add devs entries to /etc/sudoers
  - name: Adding devs to /etc/sudoers
    lineinfile:
      owner: root
      group: root
      dest: /etc/sudoers
      backup: yes
      validate: /usr/sbin/visudo -cf %s
      line: '{{ item }}'
    with_items:
      - ''
      - '## Developers'
      - 'Cmnd_Alias DEVS = /bin/firewall-cmd, /bin/systemctl, /sbin/reboot, /usr/bin/vi /etc/hosts, /bin/vim /etc/hosts, /usr/bin/update-ca-trust extract'
      - '%devs          ALL = NOPASSWD: DEVS'



## SETUP ECA SYSTEM UTILITES

#  - name: ECA snmp config
#    include_tasks:
#      import_playbook: snmp_config.yml

# yum install snmp @ latest
  - name: YUM install snmp and dependencies @ latest
    yum:
      name:  net-snmp, net-snmp-utils, net-snmp-agent-libs, net-snmp-libs
      state: present

## INSTALL 3RD-PARTY SOFTWARE
# Copy 3rd-Party dir from spacewalk to host
  - name:  Ansible copy /var/satellite/3rd-Party directory from Spacewalk to Target Server
    copy:
     src: /var/satellite/3rd-Party
     dest: /var/tmp

# Yum install rsyslog
  - name: install rsyslog
    yum:
      name: rsyslog
      state: present


# rsyslog add eventengine target to rsyslog.conf
  - name: Add target eventengine host to /etc/rsyslog.conf
    lineinfile:
     path: /etc/rsyslog.conf
     insertafter: '#*.* @@remote-host:514'
     line: '*.*  @@192.168.33.23:514'
     backup: yes
     create: yes

# rsyslog - restart service/start service
  - name:  Service rsyslogd enable/reload/start
    service:
      name: rsyslog
      state: restarted

# Yum install Crowdstrike RPM.
  - name: install Crowdstrike from local file
    yum:
      name: /var/tmp/3rd-Party/falcon-sensor-5.23.0-8705.el7.x86_64.rpm
      state: present
      disable_gpg_check: yes

# CrowdStrike - set customer number
  - name: Crowdstrike - Register/set Customer ID CID
    shell: /opt/CrowdStrike/falconctl -s -f --cid=ED53295E363C4DA4B8AC5B4E727E2337-7F
    args:
      executable: /bin/bash
      creates: /opt/CrowdStrike/Registry.bin

# Crowdstrike - enable service/start service
#  - name:  Service Crowdstrike (falcon-sensor)enable/reload/start
#    service:
#      name: falcon-sensor
#      state: reloaded

# Crowdstrike - restart service/start service
  - name:  Service Crowdstrike (falcon-sensor)enable/reload/start
    service:
      name: falcon-sensor
      state: restarted

# yum install git @ latest
  - name: YUM install git @ latest
    yum:
      name:  git
      state: present

# yum install mariadb @ latest
  - name: YUM install mariadb @ latest
    yum:
      name:  mariadb
      state: present

# yum install bcompare @ latest
  - name: install bcompare and its dependencies from local file
    yum:
      name: /var/tmp/3rd-Party/bcompare-4.3.2.24472.x86_64.rpm
      state: present
      disable_gpg_check: yes

# Yum install XRDP and selinux files.
  - name: install XRDP and its dependencies from local file
    yum:
      name: selinux-policy, selinux-policy-devel, selinux-policy-targeted, /var/tmp/3rd-Party/xrdp-selinux-0.9.11-5.el7.x86_64.rpm, /var/tmp/3rd-Party/xrdp-0.9.11-5.el7.x86_64.rpm, /var/tmp/3rd-Party/xorgxrdp-0.2.11-1.el7.x86_64.rpm, m4
      state: present
      disable_gpg_check: yes

# Firewalld - enable XRDP services
  - name:  Firewalld enable ports for XRDP
    firewalld:
       port: "{{ item }}"
       permanent: yes
       immediate: yes
       state: enabled
    loop:
      - 3389/tcp
      - 5000/tcp
      - 5001/tcp
      - 4200/tcp
      - 4300/tcp
      - 5003/tcp
      - 5103/tcp

# Firewalld - enable XRDP services
  - name:  Firewalld enbable ports for XRDP
    firewalld:
       port: "{{ item }}"
       permanent: yes
       immediate: yes
       state: enabled
    loop:
      - 3389/tcp
      - 5000/tcp

# Service - xrdp enable/start/reload
  - name:  Service XRDP enable/reload/start
    service:
      name: xrdp
      enabled: yes
      state: restarted

# Yum install dotnet dependencies from 3rd-Party dir
  - name: install dotnet PART I and dependencies from a local file
    yum:
      name: /var/tmp/3rd-Party/aspnetcore-runtime-2.2.4-x64.rpm, /var/tmp/3rd-Party/bcompare-4.3.2.24472.x86_64.rpm, /var/tmp/3rd-Party/code-1.40.1-1573664332.el7.x86_64.rpm, /var/tmp/3rd-Party/dbeaver-ce-6.2.5-stable.x86_64.rpm, /var/tmp/3rd-Party/dotnet-host-2.2.4-x64.rpm, /var/tmp/3rd-Party/dotnet-hostfxr-2.2.4-x64.rpm, /var/tmp/3rd-Party/dotnet-runtime-2.2.4-x64.rpm, /var/tmp/3rd-Party/dotnet-runtime-deps-2.2.4-rhel.7-x64.rpm, /var/tmp/3rd-Party/dotnet-sdk-2.2.203-x64.rpm
      state: present
      disable_gpg_check: yes


# Yum install dotnet dependencies from 3rd-Party dir
  - name: install dotnet PART II and dependencies from a local file
    yum:
      name: /var/tmp/3rd-Party/code-1.41.1-1576681965.el7.x86_64.rpm
      state: present
      disable_gpg_check: yes

## GOOGLE CHROME

# Yum install Google Chrome dependencies from 3rd-Party dir
  - name: install Google Chrome and dependencies from a local file
    yum:
      name: /var/tmp/3rd-Party/fontpackages-filesystem-1.44-8.el7.noarch.rpm, /var/tmp/3rd-Party/libappindicator-12.10.0-13.el7.x86_64.rpm, /var/tmp/3rd-Party/libappindicator-gtk3-12.10.0-13.el7.x86_64.rpm, /var/tmp/3rd-Party/libdbusmenu-16.04.0-4.el7.x86_64.rpm, /var/tmp/3rd-Party/libdbusmenu-gtk2-16.04.0-4.el7.x86_64.rpm, /var/tmp/3rd-Party/libdbusmenu-gtk3-16.04.0-4.el7.x86_64.rpm, /var/tmp/3rd-Party/liberation-fonts-1.07.2-16.el7.noarch.rpm, /var/tmp/3rd-Party/liberation-fonts-common-1.07.2-16.el7.noarch.rpm, /var/tmp/3rd-Party/liberation-narrow-fonts-1.07.2-16.el7.noarch.rpm, /var/tmp/3rd-Party/liberation-sans-fonts-1.07.2-16.el7.noarch.rpm, /var/tmp/3rd-Party/liberation-serif-fonts-1.07.2-16.el7.noarch.rpm, /var/tmp/3rd-Party/libindicator-12.10.1-6.el7.x86_64.rpm, /var/tmp/3rd-Party/libindicator-gtk3-12.10.1-6.el7.x86_64.rpm
      state: present
      disable_gpg_check: yes

# Yum_repository add Google Chrome Repository
  - name: Add Google Chrome repository
    yum_repository:
      name: Google_chrome_latest
      description: Google Chrome Latest
      baseurl: http://dl.google.com/linux/chrome/rpm/stable/x86_64
      gpgcheck: yes
      gpgkey: https://dl.google.com/linux/linux_signing_key.pub
      enabled: yes

# Yum install Google Chrome
  - name:  Yum install Google Chrome Latest from repo
    yum:
      name: google-chrome-stable
      state: present
      disable_gpg_check: yes

# Yum_repository Google Chrome Remove
  - name: Remove Google Chrome repository
    yum_repository:
      name: Google_chrome_latest.repo
      state: absent
#    notify: yum-clean-metadata


## INSTALL BEYONDCOMPARE - SCOOTERSOFTWARE

# Yum_repository add BeyondCompare ScooterSoft  Repository
  - name: Add ScotterSoft beyondcompare repository
    yum_repository:
      name: scootersoftware
      description: ScooterSoft beyondcompare latest
      baseurl: http://www.scootersoftware.com/bcompare4
      gpgcheck: yes
      gpgkey: http://www.scootersoftware.com/RPM-GPG-KEY-scootersoftware
      enabled: yes

# Yum install beyondcompare from ScooterSfot
  - name:  Yum install beyondcompare latest from ScooterSoft repo
    yum:
      name: bcompare
      state: present
      disable_gpg_check: yes

# Yum_repository BeyondCompare ScooterSoft Remove
  - name: Remove BeyondCompare ScooterSoft repository
    yum_repository:
      name: scootersoftware
      state: absent
#    notify: yum-clean-metadata


## Install/enable via systemctl osad service
#  - name: Enable start the osad service via systemctl osad used by Spacewalk to action on clients
#    service:
#     name=osad
#     state=restarted
#     enabled=yes
# RPMS /var/tmp/RHN-Register/python2-osad-5.11.107-1.el7.noarch.rpm /var/tmp/RHN-Register/osad-5.11.107-1.el7.noarch.rpm


## Configure BASH for users better history
#  - name: Add better BASH settings for history
#    lineinfile:
#     path: /etc/sysctl.conf
#     line: fs.inotify.max_user_watches=524288
#     create: yes


## USER/GROUP SETUP
  - name: Add devs group
    group:
     name: devs
     state: present

##
  - name: Add max_user_watch settings for Visual Studio
    lineinfile:
     path: /etc/sysctl.conf
     line: fs.inotify.max_user_watches=524288
     create: yes


  - name: Add dotnet shared library directory
    file:
     path: /usr/share/dotnet/sdk/NuGetFallbackFolder
     state: directory
     mode: '0755'

  - name:  Add custom NuGet config file /var/satellite/custom-files/NuGet.Config
    copy:
     src: /var/satellite/custom-files/NuGet.Config
     dest: /var/tmp

  - name: Ca-Certificates grant RW access to devs
    file:
     path: /etc/pki/ca-trust/source/anchors/
     state: directory
#     recurse: yes
     mode: '0757'

  - name: Ca-Certificates grant RW access to devs
    file:
     path: /etc/pki/ca-trust/extracted
     state: directory
     recurse: yes
     mode: '0757'

## NODEJS and then NPM GLOBAL modules install (should be 141 based up on software levels below)
  - name:  NODEJS install (local/user install swill be completed by the developers
    yum:
      name: nodejs-10.17.0-1nodesource.x86_64
      state: present
      disable_gpg_check: yes

  - name:  NPM Global module installs (local/user install swill be completed by the developers
    npm:
      name: "@angular/cli"
      version: 7.3.9
      global: yes
      state: present
      executable: /usr/bin/npm


  - name:  NPM Global module installs (local/user install swill be completed by the developers
    npm:
      name: typescript
      version: 3.4.5
      global: yes
      state: present
      executable: /usr/bin/npm

# npm list -g -depth=0
# npm install -g @angular/cli@7.3.9
# npm install -g typescript@3.4.5
# npm list -g -depth=1 | wc -l     #  141 total




## TIDY UP TEMPORARY WORKING DIRECTORIES
## RHN-Register clean up /var/tmp/RHN-Register working directory
  - name: Clean-up remove /var/tmp/RHN-Register directory
    file:
     path: /var/tmp/RHN-Register
     state: absent

## 3rd-Party clean up /var/tmp/3rd-Party working directory
  - name: Clean-up remove /var/tmp/RHN-Register directory
    file:
     path: /var/tmp/3rd-Party
     state: absent
